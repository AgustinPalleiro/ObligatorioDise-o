/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistaEscritorio;

import controlador.ControladorAdministrarMesa;
import logica.Administrador;
import logica.SistemaMesa;
import controlador.VistaAdministrarMesa;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import logica.Mesa;
import logica.Fachada;
import logica.Mano;

/**
 *
 * @author Agus
 */
public class AdministrarMesa extends javax.swing.JDialog implements VistaAdministrarMesa{

    private ControladorAdministrarMesa controlador;
    
    public AdministrarMesa(java.awt.Frame parent, boolean modal, Administrador admin) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        controlador = new ControladorAdministrarMesa(this, admin);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelJugadores = new javax.swing.JLabel();
        labelApuesta = new javax.swing.JLabel();
        labelComision = new javax.swing.JLabel();
        btnCrearMesa = new javax.swing.JButton();
        tfApuesta = new javax.swing.JTextField();
        tfComision = new javax.swing.JTextField();
        tfCantJugadores = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        taMensajes = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaMesas = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaManosDeMesa = new javax.swing.JList();

        labelJugadores.setText("Cantidad de jugadores:");

        labelApuesta.setText("Mínimo apuesta base:");

        labelComision.setText("Porcentaje comisión:");

        btnCrearMesa.setText("Crear mesa");
        btnCrearMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearMesaActionPerformed(evt);
            }
        });

        jLabel1.setText("MESAS ACTIVAS:");

        taMensajes.setColumns(20);
        taMensajes.setRows(5);
        jScrollPane3.setViewportView(taMensajes);

        listaMesas.setToolTipText("");
        listaMesas.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaMesasValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listaMesas);

        jLabel2.setText("DETALLES DE MANO EN MESA:");

        jScrollPane2.setViewportView(listaManosDeMesa);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnCrearMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelJugadores)
                                    .addComponent(labelComision, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelApuesta, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfCantJugadores, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                                    .addComponent(tfApuesta)
                                    .addComponent(tfComision)))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(163, 163, 163)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane2))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfCantJugadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelJugadores))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(22, 22, 22)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfApuesta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelApuesta))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfComision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelComision))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCrearMesa)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearMesaActionPerformed
        crearMesa();
    }//GEN-LAST:event_btnCrearMesaActionPerformed

    private void listaMesasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaMesasValueChanged
        detallesMesa();
    }//GEN-LAST:event_listaMesasValueChanged

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrearMesa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelApuesta;
    private javax.swing.JLabel labelComision;
    private javax.swing.JLabel labelJugadores;
    private javax.swing.JList listaManosDeMesa;
    private javax.swing.JList listaMesas;
    private javax.swing.JTextArea taMensajes;
    private javax.swing.JTextField tfApuesta;
    private javax.swing.JTextField tfCantJugadores;
    private javax.swing.JTextField tfComision;
    // End of variables declaration//GEN-END:variables

   
    
    public void crearMesa() {
        try {
            int cantJugadores = Integer.parseInt(tfCantJugadores.getText().trim());
            double apuestaMinima = Double.parseDouble(tfApuesta.getText().trim());
            int comision = Integer.parseInt(tfComision.getText().trim());
            controlador.crearMesa(cantJugadores, apuestaMinima, comision);
            
        } catch (NumberFormatException e) {
            taMensajes.setText("Error: Por favor, ingresa números válidos en todos los campos.");
        } catch (Exception e) {
            taMensajes.setText("Error: " + e.getMessage());
        }
    }   
    
    @Override
    public void mostrarError(String message) { //Mostrar error en caja de texto to text area, NO USAR JOPTIONPANE
        taMensajes.setText(message);
    }
    
    @Override
    public void mostrarMesas(String nombreCompleto, double montoTotal, ArrayList<Mesa> mesas) {
        ArrayList<String> listadoMesas = new ArrayList();
        String titulo = ("ADMINISTRADOR " + nombreCompleto.toUpperCase() + " - MONTO TOTAL MESAS: " + montoTotal);
        setTitle(titulo);
        for(Mesa m: mesas){
            listadoMesas.add("Numero de mesa : " + m.getNumeroDeMesa() + " | Cantidad minima de jugadores : " + m.getCantMinimaJugadores() + " | Apuesta minima : " 
                + m.getApuestaMinima() + " | Cantidad de jugadores actual: " + m.cantJugadoresEnMesa() + " | Numero de mano actual: " + m.numeroManoActual() +
                " | Monto total apostado: " +  m.montoTotalApostado() + " | Comision : " + m.getComision() + " | Monto total recaudado: " + m.montoRecaudado()
                + " | Estado : " + m.getEstado().getDescripcion()); //TRAE MESA ABIERTA
        }
        listaMesas.setListData(listadoMesas.toArray()); //Intentar usar el toString2 porque muestra diferentes datos que el comun  
    }
    
    @Override
    public void mostrarSuccess() {
        taMensajes.setText("La mesa fue creada correctamente");
    }
    
    @Override
    public void prepararProximoIngreso() {
        tfCantJugadores.setText("");
        tfApuesta.setText("");
        tfComision.setText("");
    }
    
    private void detallesMesa() {
        int pos = listaMesas.getSelectedIndex();
        controlador.detallesMesa(pos);
    }
    /*
    @Override
    public void mostrarDetallesMesa(int numeroMano, int cantJugadores, double montoTotalApostado, String estado, String nombreGanador, String figuraGanadora) {
        lbnumeroMano.setText("Numero mano: " + numeroMano);
        lbjugadoresParticipantes.setText("Jugadores participantes: " + cantJugadores);
        lbtotalApostadoEnManoActual.setText("Total apostado en mano actual: " + montoTotalApostado);
        lbEstadoMano.setText("Estado de la mano: " + estado);
        lbnombreGanador.setText("Nombre del ganador: " + nombreGanador);
        lbfiguraGanadora.setText("Figura ganadora: " + figuraGanadora);
    }

    @Override
    public void borrarDetalles() {
        lbnumeroMano.setText("Numero mano: ");
        lbjugadoresParticipantes.setText("Jugadores participantes: ");
        lbtotalApostadoEnManoActual.setText("Total apostado en mano actual: ");
        lbEstadoMano.setText("Estado de la mano: ");
        lbnombreGanador.setText("Nombre del ganador: ");
        lbfiguraGanadora.setText("Figura ganadora: ");
    }*/

    @Override
    public void mostrarDetallesManoDeMesa(ArrayList<Mano> manos) {
        ArrayList<String> detallesManos = new ArrayList();
        for(Mano m: manos){
            detallesManos.add("Numero de mano: " + m.getNumeroMano() + " | Jugadores participantes: " + m.getCanitdadJugadoresEnMano()
                               + " | Total apostado en mano: " + m.getPozo().getMonto() + " | Estado mano : " + m.getEstado().getDescripcion()
                                + " | Nombre del ganador: " + m.getNombreJugadorGanador() + 
                                       " | Figura ganadora: " + m.getFiguraGanadora());
        }
        listaManosDeMesa.setListData(detallesManos.toArray());
    }
    
    
    
}
